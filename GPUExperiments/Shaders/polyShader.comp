#version 430

layout (local_size_x = 9, local_size_y = 4) in; 

struct PolyVertex {
   vec4  location; 
   vec4  color; 
};

layout (std430, binding = 1) buffer VertexBuffer {
   PolyVertex verts [];
};


 void main() 
 {
	uint id = uint(dot(gl_GlobalInvocationID, vec3(gl_WorkGroupSize.yz, 1)));

	uint startIndex = id * 3;
	float xOffset = (id % gl_WorkGroupSize.x) / (gl_WorkGroupSize.x - 1.0f) - 0.5f;
	float yOffset = floor(id / gl_WorkGroupSize.x) / (gl_WorkGroupSize.y - 1.0f) - 0.5f;

	verts[startIndex + 0].location = vec4(-0.1f + xOffset, -0.15f + yOffset, 0, 1.0);
	verts[startIndex + 1].location = vec4(+0.1f + xOffset, -0.15f + yOffset, 0, 1.0);
	verts[startIndex + 2].location = vec4(+0.0f + xOffset, +0.15f + yOffset, 0, 1.0);
											    
	verts[startIndex + 0].color = vec4(1.0, 0.8, 0.3, 1.0);
	verts[startIndex + 1].color = vec4(xOffset + 0.5, 0.1, 0.0, 1.0);
	verts[startIndex + 2].color = vec4(0.1, 0.4, yOffset + 0.5, 1.0);
 }