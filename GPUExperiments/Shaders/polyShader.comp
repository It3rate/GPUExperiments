#version 430

layout (local_size_x = 3, local_size_y = 1) in; 
//layout (local_size_x = 12, local_size_y = 3) in; 

struct PolyVertex {
   vec4  location; 
   vec4  color; 
};

layout (std430, binding = 1) buffer VertexBuffer {
   PolyVertex verts [];
};


 void main() 
 { 
	uint startIndex = gl_GlobalInvocationID.x * 3;
	uint id = gl_GlobalInvocationID.x;
	float x = (id % gl_NumWorkGroups.x) / float(gl_NumWorkGroups.x);
	float y = floor(id / gl_NumWorkGroups.x) / float(gl_NumWorkGroups.y);
//	float x = (id % gl_LocalInvocationID.x) / float(gl_LocalInvocationID.x);
//	float y = floor(id / gl_LocalInvocationID.x) / float(gl_LocalInvocationID.y);
	//y += id/100.0f;

	float xoffset = x - 0.5f;
	float yoffset = y - 0.5f;
	verts[startIndex + 0].location = vec4(-0.2f + xoffset, -0.2f + yoffset, 0, 1.0);
	verts[startIndex + 1].location = vec4(+0.2f + xoffset, -0.2f + yoffset, 0, 1.0);
	verts[startIndex + 2].location = vec4(+0.0f + xoffset, +0.2f + yoffset, 0, 1.0);
											    
	verts[startIndex + 0].color = vec4(1.0,0.0, 0.6, 1.0);
	verts[startIndex + 1].color = vec4(y,0.5, 0.0, 1.0);
	verts[startIndex + 2].color = vec4(0.0,1.0, 0.5, 1.0);
 }